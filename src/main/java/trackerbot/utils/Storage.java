package trackerbot.utils;

import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.Scanner;

import trackerbot.exception.TrackerBotException;
import trackerbot.task.Task;
import trackerbot.task.TaskList;

/**
 * Contains static methods to read/write save data of TrackerBot.
 * <p>Storage will always save and load the files in the relative path:
 * [.\TrackerBot\data.txt].</p>
 *
 * @author WZWren
 * @version A-CodeQuality
 */
public class Storage {
    private static final String PARENT_FOLDER = "TrackerBot";
    private static final String DATA_FILE = "data.txt";

    /** Prevent the instantiation of Storage object. */
    private Storage() {};

    /**
     * Parses the save string in the input file.
     * <p>The save string is generated by the Task.toSaveString
     * method, and will be parsed based on its format.</p>
     *
     * @param saveStr The input save string, in the aforementioned format.
     * @return The Task object from parsing the String.
     * @see Task#toSaveString()
     */
    private static Task parseSaveLine(String saveStr) throws TrackerBotException {
        final String delimiter = "[|]";
        String[] args = saveStr.split(delimiter);
        return Task.ofSaveString(args[0], Arrays.copyOfRange(args, 1, args.length));
    }

    /**
     * Attempts to read the save data into the TrackerBot.
     * <p>The save string is generated by the Task.toSaveString
     * method, and will be parsed based on its format.</p>
     * <p>This method will always attempt to load from the relative path:
     * [.\TrackerBot\data.txt].</p>
     *
     * @param tasks The TaskList to read data into.
     * @throws TrackerBotException If the save data fails to load, with specified reason.
     * @see Task#toSaveString()
     */
    public static void read(TaskList tasks) throws TrackerBotException {
        Path path = Paths.get(PARENT_FOLDER, DATA_FILE);
        if (Files.notExists(path)) {
            return;
        }

        try (Scanner input = new Scanner(new FileReader(path.toFile()))) {
            while (input.hasNextLine()) {
                tasks.importSave(parseSaveLine(input.nextLine()));
            }
        } catch (TrackerBotException e) {
            tasks.clear();
            throw e;
        } catch (IOException e) {
            throw new TrackerBotException("Failed to load save file: " + e.getMessage());
        }
    }

    /**
     * Attempts to save TrackerBot data into a save file.
     * <p>This method will always attempt to save into the relative path:
     * [.\TrackerBot\data.txt].</p>
     *
     * @param tasks The TaskList to read data from.
     * @throws TrackerBotException If the save data fails to generate, with specified reason.
     */
    public static void save(TaskList tasks) throws TrackerBotException {
        Path path = Paths.get(PARENT_FOLDER, DATA_FILE);
        File file = path.toFile();
        try {
            Files.createDirectories(path.getParent());
        } catch (IOException e) {
            throw new TrackerBotException(e.getMessage());
        }

        try (FileOutputStream output = new FileOutputStream(file, false)) {
            output.write(tasks.exportSave().getBytes());
        } catch (IOException e) {
            throw new TrackerBotException(e.getMessage());
        } // the try with resources statement auto-closes output.
    }
}
