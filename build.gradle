plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'checkstyle'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'

    // Used for loops to clean up the imports
    def platforms = ["win", "linux", "mac"]
    def javafxDependency = ["javafx-graphics", "javafx-controls", "javafx-fxml"]

    for (plt in platforms) {
        for (dep in javafxDependency) {
            runtimeOnly "org.openjfx:$dep:$javafx.version:$plt"
        }
    }

}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}

application {
    mainClass.set("sisyphus.Launcher")
}

shadowJar {
    archiveBaseName = "sisyphus"
    archiveClassifier = null
    dependsOn("distZip", "distTar")
}

checkstyle {
    toolVersion = '10.2'
}

javafx {
    version = '17.0.7'
    modules = ['javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

run{
    standardInput = System.in
    enableAssertions = true
}
