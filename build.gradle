plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

checkstyle {
    toolVersion = '10.2'
}

checkstyleMain {
    source 'src/main/java'
}


dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'

    // JavaFX 17.0.7 dependencies for macOS on ARM64
    implementation 'org.openjfx:javafx-base:17.0.7:mac-aarch64'
    implementation 'org.openjfx:javafx-controls:17.0.7:mac-aarch64'
    implementation 'org.openjfx:javafx-fxml:17.0.7:mac-aarch64'
    implementation 'org.openjfx:javafx-graphics:17.0.7:mac-aarch64'

    // JavaFX 17.0.7 dependencies for Linux
    implementation 'org.openjfx:javafx-base:17.0.7:linux'
    implementation 'org.openjfx:javafx-controls:17.0.7:linux'
    implementation 'org.openjfx:javafx-fxml:17.0.7:linux'
    implementation 'org.openjfx:javafx-graphics:17.0.7:linux'

    // JavaFX 17.0.7 dependencies for Windows
    implementation 'org.openjfx:javafx-base:17.0.7:win'
    implementation 'org.openjfx:javafx-controls:17.0.7:win'
    implementation 'org.openjfx:javafx-fxml:17.0.7:win'
    implementation 'org.openjfx:javafx-graphics:17.0.7:win'
}


repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}

application {
    mainClass.set("duke.Launcher")
}

shadowJar {
    archiveBaseName = "L"
    archiveClassifier = null
    dependsOn("distZip", "distTar")
}
run{
    enableAssertions = true
    standardInput = System.in
}
