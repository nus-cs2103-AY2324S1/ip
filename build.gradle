plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}


repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.10.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.10.0'
    //implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'

    // Used for loops to clean up the imports
    def platforms = ["win", "linux", "mac"]
    def javafxDependency = ["javafx-graphics", "javafx-controls", "javafx-fxml"]

    for (plt in platforms) {
        for (dep in javafxDependency) {
            runtimeOnly "org.openjfx:$dep:$javafx.version:$plt"
        }
    }
}


java {
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11

}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}

application {
    //mainClassName = 'cheese.Cheesebot'
    mainModule = 'cheese'
    mainClassName = "cheese.Launcher"
}

shadowJar {
    archiveBaseName = "cheese"
    archiveFileName = "cheese.jar"
    archiveClassifier = null
    dependsOn("distZip", "distTar")
}



javafx {
    version = "17.0.8"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.base', 'javafx.graphics']
}

mainClassName = 'cheese.Launcher'



run{
    standardInput = System.in
}
